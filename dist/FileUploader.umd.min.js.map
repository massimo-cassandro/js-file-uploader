{"version":3,"file":"FileUploader.umd.min.js","sources":["../js/i18n/it.js","../js/src/default-options.js","../js/src/utilities.js","../js/src/sortable.js","../js/src/create-item.js","../js/src/alert.js","../js/src/send-files.js","../js/src/build-hidden-fields.js","../js/src/create-uploader.js","../js/src/create-info-text.js","../js/src/set-listeners.js","../js/file-uploader.js","../js/src/init.js"],"sourcesContent":["const fupl_strings_it = {\n\n  // Mustache-like placeholders will be replaced with corresponding values\n\n  alert_too_much_files: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n  alert_xhr_error: 'Si &egrave; verificato un errore nel caricamento del file “<strong>{{file_name}}</strong>”.', // errore ajax\n  alert_file_format_error: 'Il file “<strong>{{file_name}}</strong>” è di un formato non consentito',\n  alert_file_size_error: 'Le dimensioni di “<strong>{{file_name}}</strong>” ({{file_size}}) '+\n    'superano il valore massimo consentito ({{allowed_size}})',\n\n  fupl_alert_header: 'Errore',\n  fupl_alert_btn_text: 'OK',\n\n  // images sizes alerts\n  alert_img_exact_width_err: '<strong>{{file_name}}</strong>: larghezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_min_width_err: '<strong>{{file_name}}</strong>: larghezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_max_width_err: '<strong>{{file_name}}</strong>: larghezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_exact_height_err: '<strong>{{file_name}}</strong>: altezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_min_height_err: '<strong>{{file_name}}</strong>: altezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_max_height_err: '<strong>{{file_name}}</strong>: altezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_ratio_err: '<strong>{{file_name}}</strong>: la proporzione tra base e altezza dell’immagine non corrisponde a quella richiesta ({{aspect_ratio}})',\n\n  no_img_text: 'Nessuna immagine presente',\n  no_doc_text: 'Nessun file presente',\n  remove_btn_text: 'Elimina questo file',\n\n  // info text strings\n  info_text_std_imgs : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>',\n  info_text_imgs_svg : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong>, <strong>WEBP</strong> o <strong>SVG</strong>',\n  info_text_imgs_svg_size_info_text: '<strong>Solo per le immagini non SVG:</strong> ',\n\n  info_text_img_optimize_info: 'Per modificare e comprimere le immagini puoi utilizzare <a href=\"https://www.iloveimg.com/it\" target=\"_blank\" rel=\"noopener noreferrer\">I Love IMG</a>.<br>' +\n    'Puoi ridurre le dimensioni dei documenti PDF con <a href=\"https://www.ilovepdf.com/it/comprimere_pdf\" target=\"_blank\" rel=\"noopener noreferrer\">I Love PDF</a>.',\n\n  info_text_svg_optimize_info: 'È consigliabile ottimizzare i file SVG prima del caricamento, ' +\n    'ad esempio tramite <a href=\"https://jakearchibald.github.io/svgomg/\" target=\"_blank\" rel=\"noopener noreferrer\">SVGO</a>',\n\n  info_text_img_fixed_size: 'dimensioni: <strong>{{img_w}}&times;{{img_h}}px</strong>',\n  info_text_img_equal_min_size: 'larghezza e altezza non inferiori a <strong>{{img_min_w}}px</strong>',\n  info_text_img_equal_max_size: 'larghezza e altezza non superiori a <strong>{{img_max_w}}px</strong>',\n  info_text_img_fixed_width : 'larghezza <strong>{{img_w}}px</strong>',\n  info_text_img_fixed_height : 'altezza <strong>{{img_h}}px</strong>',\n  info_text_img_width_range: 'larghezza compresa tra <strong>{{img_min_w}}px</strong> e <strong>{{img_max_w}}px</strong>',\n  info_text_img_min_width: 'larghezza non inferiore a <strong>{{img_min_w}}px</strong>',\n  info_text_img_max_width: 'larghezza non superiore a <strong>{{img_max_w}}px</strong>',\n  info_text_img_height_range: 'altezza compresa tra <strong>{{img_min_h}}px</strong> e <strong>{{img_max_h}}px</strong>',\n  info_text_img_min_height: 'altezza non inferiore a <strong>{{img_min_h}}px</strong>',\n  info_text_img_max_height: 'altezza non superiore a <strong>{{img_max_h}}px</strong>',\n  info_text_pdf_file: 'file in formato <strong>PDF</strong>',\n  info_text_svg_file: 'immagini in formato <strong>SVG</strong>',\n  info_text_max_filesize: 'max <strong>{{max_filesize}}</strong>',\n  info_text_img_aspect_ratio: 'Il rapporto tra base e altezza dell’immagine deve essere esattamente pari a <strong>{{img_aspect_ratio}}</strong>',\n\n  // select or drag labels\n  img_single_select_text   : 'Seleziona un’immagine',\n  img_single_drag_text     : '&hellip;oppure trascinala qui',\n  img_multiple_select_text : 'Seleziona una o pi&ugrave; immagini',\n  img_multiple_drag_text   : '&hellip;oppure trascinale qui',\n  doc_single_select_text   : 'Seleziona un documento',\n  doc_single_drag_text     : '&hellip;oppure trascinalo qui',\n  doc_multiple_select_text : 'Seleziona uno o pi&ugrave; documenti',\n  doc_multiple_drag_text   : '&hellip;oppure trascinali qui',\n\n  sortable_icon_title_text: 'Trascina per cambiare l’ordinamento'\n};\n\nexport default fupl_strings_it;\n","/*\n  Some options contain Mustache-like variables (e.g.: {{xxx}}) that will be replaced\n  with the corresponding values of the localized strings items.\n\n  Variable name (the `xxx` part) must be the same as the string item name\n\n*/\n\nexport const default_options = {\n\n  // server side script url\n  uploader_url: null,\n\n  // locales for numbers parsing\n  locales: 'it-IT',\n\n  // ff true, console shows informations about current FileUploader Configuration\n  debug: false,\n\n  // method for ajax request\n  ajax_method: 'POST',\n\n  // disabled state\n  /*\n    If true, it prevents items from being loaded\n\n    The presence of the disabled attribute in the .fupl-wrapper element disables the element\n    input [type = file] generated by FileUploader (HTML 5 std behavior) and prevents drag & drop.\n\n    The disabled parameter can also be set via the element attribute\n    input [type = file] of fallback, if present.\n    Be carefully about changing disabled state of the input field on the fly:\n    to have it affect the FileUploader instance, you must also modify the disabled attribute\n    of the fieldset.fupl-wrapper element.\n  */\n  disabled: false,\n\n  // types of selectable files. the value must match one of the `upl.mimetypes` arrays\n  filetype: 'auto',\n\n  /*\n    String of extensions or mimetypes separated by commas that identify\n    alloewd files to be uploaded,\n    in addition or replacement of what is set via the `filetype` parameter.\n\n    The `accept` attribute of the input field contained\n    in the FileUploader element (if present), performs the same function.\n\n    In both cases, the values are taken into account only if `filetype == 'auto'`\n\n    In the presence of both the `accept` parameter and the `accept` attribute,\n    a merge is performed, and the accept attribute takes precedence over the parameter.\n    If this parameter is `null`, the` accept` attribute is not present,\n    and  `filetype` parameter is `auto` all file types are accepted.\n\n  */\n  accept: null,\n\n  /*\n    Enable the ability to uploader multiple files.\n    This option can also be activated via the `multiple` attribute\n    of the `input` field (if present)\n  */\n  multiple: false,\n\n  /*\n    Set the FileUploder as required\n    This option can also be activated via the `multiple` attribute\n    of the `input` field (if present)\n  */\n  required: false,\n\n  // disables FileUploader submit button of the parent form element while\n  // FileUploader is performing an upload.\n  disable_submit: false,\n\n  // HTML templates\n  template_main: '<div class=\"fupl-result\"></div>' +\n    '<div class=\"fupl-panel\">' +\n      '<div class=\"fupl-button\">' +\n        '<label><input type=\"file\"></label>' +\n        '<div class=\"fupl-dd-text\"></div>' +\n      '</div>' +\n      '<div class=\"fupl-info-text\"></div>' +\n    '</div>',\n\n  template_empty_img: '<div class=\"fupl-result-empty text-muted small font-italic\">{{no_img_text}}</div>',\n  template_empty_doc: '<div class=\"fupl-result-empty text-muted small font-italic\">{{no_doc_text}}</div>',\n\n  // template of trigger for removing files\n  // This markup will be placed inside the `.fupl-remove` element,\n  // that must be present in the template of each FileUploader item\n  // It must be a button element\n  template_remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"{{remove_btn_text}}\" title=\"{{remove_btn_text}}\">' +\n      '<span aria-hidden=\"true\">&times;</span>' +\n    '</button>',\n\n  // Markup to show uploading progress\n  template_loading_element: '<div class=\"fupl-loading\"><progress class=\"fupl-progress\" max=100 value=0></progress></div>',\n\n  // Alternative loading feedback, used if progress.lengthComputable == false.\n  // In this case and if the `alternative_loading_func` function is not present,\n  // this string replaces the `.fupl-progress` element.\n  template_alternative_loading_element: '<div class=\"spinner-grow text-primary\" role=\"status\">' +\n    '<span class=\"sr-only\">Loading...</span></div',\n\n  // items templates, if tag <a> is used, avoid `href` attribute\n  template_img_item_single: '<div class=\"fupl-item\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n      '<div class=\"fupl-file-info\">' +\n        '<div class=\"text-truncate fupl-file-name\"></div>' +\n        '<div class=\"fupl-file-size\"></div>' +\n        '<div class=\"fupl-extra-fields\"></div>' +\n      '</div>' +\n    '</div>',\n\n  template_img_item_multiple: '<div class=\"fupl-item\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<div class=\"fupl-img-wrapper\">' +\n        '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\" draggable=\"false\">' +\n      '</div>' +\n      '<div class=\"fupl-file-info\">' +\n        '<div class=\"text-truncate fupl-file-name\"></div>' +\n        '<div class=\"fupl-file-size\"></div>' +\n      '</div>' +\n      '<div class=\"fupl-extra-fields\"></div>' +\n      '<div class=\"fupl-sortable-icon\"></div>' +\n    '</div>',\n\n  template_doc_item_single: '<div class=\"fupl-item\">' +\n    '<div class=\"fupl-doc-wrapper\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<div class=\"fupl-doc text-truncate\">' +\n        '<a class=\"text-truncate fupl-file-name fupl-url\" draggable=\"false\"></a>' +\n      '</div>' +\n    '</div>' +\n    '<div class=\"small ml-1 text-nowrap fupl-file-size\"></div>' +\n    '<div class=\"fupl-extra-fields\"></div>' +\n    '<div class=\"fupl-sortable-icon\"></div>' +\n  '</div>',\n\n  template_doc_item_multiple: null, // uses single doc templates\n\n  // Extra classes to be added to the FileUploader wrapper element (classes names separated by spaces)\n  wrapper_extra_class: null,\n\n  // template for error messages dialog\n  // if changed, .fupl-x classes must be maintained\n  fupl_alert_template:\n    `<div class=\"fupl-alert-overlay\">\n      <div class=\"fupl-alert\">\n        <div class=\"fupl-alert-header\">{{fupl_alert_header}}</div>\n        <div class=\"fupl-alert-body\"></div>\n        <div class=\"fupl-alert-footer\">\n          <button type=\"button\" class=\"fupl-alert-btn\">{{fupl_alert_btn_text}}</button>\n        </div>\n      </div>\n    </div>`,\n\n  // classes to be added to alert button\n  // they can be changed without redefine entire alert template\n  // merging is perfomed in the `init` module\n  fupl_alert_btn_class: 'btn btn-secondary',\n\n\n  // Class(es) to be added to the FileUploader element when a file is dragged there from desktop\n  element_dragover_class: 'fupl-is-dragover',\n\n  // If true a legend tag will be added inside the the FileUploader wrapper (fieldset)\n  // It will be filled with the text of the label of the input[file] tag (if present)\n  // or with the uploader_legend_text parameter content\n  uploader_legend: true,\n\n  // Text of legend element (alternative to original label text)\n  uploader_legend_text: null,\n\n  // Class to be added to uploader_legend element\n  uploader_legend_class: null,\n\n  // classes to be added to the label of the generated nput[file] tag\n  input_label_class: 'btn btn-outline-primary btn-sm',\n\n  // show the information text on accepted formats, image size, etc.\n  show_info_text: true,\n\n  // show images optimization tips\n  show_optimize_info: true,\n\n  // strings added to the beginning and end of the generated info text\n  info_text_wrap_string: ['(', ')'],\n\n  // String used to join the various parts of the generated info text\n  info_text_join_string: ' - ',\n\n  // Custom info text. If present, replaces the generated info text\n  custom_info_text: null,\n\n  // help text. If present, is added after the info_text or custom_info_text\n  help_text: null,\n\n  /*\n    Images settings (only for filetype == 'img')\n\n    Numeric values that correspond to the pixel dimensions required for the image.\n    The img_min_* and img_max_* parameters can be assigned simultaneously,\n    but they are ignored if the corresponding exact parameters exist\n    (for example, if img_w is present, the parameters img_min_w and img_max_w\n    or img_aspect_ratio are not taken into consideration).\n    The default value of all parameters is null, which means that they are not applied.\n    Aspect ratio must be a number or string in w/h or w:h format or the result of w/h division.\n    Aspect ratio values are rounded to three decimal places\n\n      * `img_w`            : exact image width\n      * `img_h`            : exact image height\n      * `img_min_w`        : min image width\n      * `img_min_h`        : min image height\n      * `img_max_w`        : max image width\n      * `img_max_h`        : max image height\n      * `img_aspect_ratio` : aspect ratio w/h value (16/9, 4:3, 0.5, ecc)\n  */\n  img_w            : null,\n  img_h            : null,\n  img_min_w        : null,\n  img_min_h        : null,\n  img_max_w        : null,\n  img_max_h        : null,\n  img_aspect_ratio : null,\n\n  /*\n    Aspect Ratio accuracy.\n    It is a number that indicates the decimal numbers to which the image size\n    ratio will be rounded for comparison with the `img_aspect_ratio` parameter\n  */\n  aspect_ratio_accuracy: 2,\n\n  /*\n    Maximum size (weight) of the image. It can be a number,\n    and in this case it corresponds to a dimension in KB, or a string\n    composed of a numeric value and a suffix between ‘KB’ and ‘MB’ (also lowercase).\n    If the value is null or if the string is not recognized,\n    no limit is applied.\n  */\n  max_filesize: null,\n\n  /*\n    Prefix of the variable used to send the data to the server.\n    The value indicates the base name of the generated varname\n  */\n  varname: 'file',\n\n  /*\n    Prefix of the variable used to send the data to the server,\n    for extra fields of preregistered files only\n    (For compatibility with beta version)\n  */\n  registered_extra_field_varname: null,\n\n  /*\n    Function called after the initialization of each FileUploader element.\n    Function is invoked passing the complete `fupl` obj as argument\n  */\n  init_callback: null,\n\n  /*\n    Function called each time a file upload begins.\n    Function argument is an object that contains:\n      * `item`: current item object, it contains:\n          - `id`: element unique id\n          - `file`: current filelist object\n          - `width` and `height`: null or image dimensions (pixel)\n      * `img_preview` : base64 image preview (null if not an image)\n      * `fupl`: options & strings of current FileUploader instance\n  */\n  upload_start_callback: null,\n\n  /*\n    Function called each time a file has been uploaded.\n      Function argument is an object that contains:\n      * `item`: current item object, it contains:\n          - `id`: element unique id\n          - `file`: current filelist object\n          - `width` and `height`: null or image dimensions (pixel)\n          - `tmp_file`: name of temporary file saved on the server\n      * `server_error`: error message strimg (null if no error occurred)\n      * `fupl`: options & strings of current FileUploader instance\n  */\n  upload_complete_callback: null,\n\n  /*\n    Alternative upload progress function (see alternative_loading_element parameter)\n    If present, it replaces the standard one\n    Function argument is an object that contains:\n      - `progress_event`: upload progress event\n      - `fupl`: options & strings of current FileUploader instance\n  */\n  alternative_loading_func: null,\n\n  /*\n    JSON array of preregistered element:\n    [\n      {\n        rel_id → id of the record related to the file (it's facultative and can be null).\n                  It's usefully for many-to-many tables, and, if present,\n                  is the one provided to delete a file from the server\n        id     → unique id of the file (required)\n        name   → file name (required)\n        url    → url for <a> tag href attribute (if present) (facultative)\n        src    → image `src` attribute (required for images only)\n        wi     → image pixel width  (for images only)\n        he     → image pixel height  (for images only)\n        size   → bytes size\n        [...]  → extra fields, if present\n      }\n      [...]\n    ]\n  */\n  values: [],\n\n  // varname use for deleted file generated hidden fields\n  delete_varname: 'elimina_file[]',\n\n  /*\n    if true fancybox integration is activated for images\n    fancybox is not present in FileUploader, and must be loaded in the page\n    Furthermore, to activate this option, an `url` parameter must be provided\n    (see `values` option)\n  */\n  fancybox: false,\n\n  /*\n    markup of <a> tag to wrap image tags when fancybox option is active\n    if a `a.fupl-url` element is present in img templates string, this options\n    will not be used\n  */\n  fancybox_anchor_markup: '<a class=\"fupl-url\" data-fancybox=\"fupl-gallery\"></a>',\n\n  /*\n    optional function to be called after fancybox markup is applied\n    to all elements and after `init_callback`.\n    Function is invoked passing the complete `fupl_options` obj as argument\n  */\n  fancybox_callback_func: null,\n\n  // ========================================\n  // SORTABLE OPTIONS\n  // ========================================\n  /*\n    Enable the ability to rearrange items by dragging them.\n\n    This options adds one more hidden field for each file to the form, using the\n    `reorder_varname` parameter for generated varnames.\n\n    The reorder option is enabled if the reorder parameter is true, if\n    the multiple parameter is true and if the sortable_varname parameter is present\n\n    If the option is active, the values of any pre-recorded items\n    must be provided in the json `values` in the correct order\n\n    See `demo / reorder_demo.html` for a usage example\n  */\n  sortable: false,\n\n  /*\n    sortable hidden item varname\n    it will be combined with main varname to obtain a string like\n      varname[item_id][sortable_varname]\n  */\n  sortable_varname: 'fupl_order',\n\n  /*\n    markup for dragging icon\n    to be inserted in `.fupl-sortable-icon` element,\n    that must be present in the multiple item template\n  */\n  sortable_icon: '<div title=\"{{sortable_icon_title_text}}\"></div>',\n\n  // ========================================\n  // EXTRA FIELDS\n  // ========================================\n  /*\n    Markup to be added at the end of every uploaded item.\n    It is an array of objects each of which describes a field element:\n      [\n        {\n          \"value_key\": field key,\n          \"markup\": html string\n        },\n        ...\n      ]\n\n    * `value_key` identifies the field element and corresponds to the key used\n                  also in the values object.\n    * `use_rel_id` (default false), if true, and the `values` parameter contains the\n                    `rel_id` items, the `{{name}}` variable will be generated\n                    using `rel_id` instead of `id`.\n                    Only pre-registered items will be affected by this setting (since new items\n                    never have a `rel_id`).\n                    If `use_rel_id` is true but the `rel_id`  item doesn't exist,\n                    the `id`  will be used\n\n    * `markup` is a HTML string which contains some Mustache-like placeholder:\n      - `{{idx}}`         → unique id of the element\n      - `{{val}}`         → content of `value` attribute, it corresponds to\n                            `values[...][value_key]` value\n      - `{{checked}}`     → if `values[...][value_key]` exists and it's different from\n                            `0`, `null` or empty string, it is replaced with the `checked` attribute,\n                            otherwise, with a space\n      - `{{name}}`        → is replaced with a PHP name string formed by\n                                * the `varname` parameter\n                                * the unique id or rel_id (according to use_rel_id setting) of the element\n                                * the `value_key` string\n                            Example: `file[fupl_00001][caption]`\n\n      select fields must have a `data-selected=\"{{val}}\"` attribute\n\n    Take a look to `extra_fields_demo.html` for a working demo.\n  */\n  extra_fields: null\n};\n","export const fupl_utilities = {\n\n  /*\n    Mimetypes and extensions allowed according to `filetype` parameter\n    The `auto` parameter accepts all file types (except for limitations\n    added by `accept` parameter/attribute)\n  */\n  mimetypes: (() => {\n    let mimetypes = {\n      auto      : null,\n      img       : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n        '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n      pdf       : ['application/pdf', '.pdf'],\n      svg       : ['image/svg+xml', '.svg', '.svgz']\n    };\n\n    mimetypes['img+svg'] = mimetypes['img'].concat(mimetypes['svg']);\n\n    return mimetypes;\n\n  })(),\n\n  /*\n    isSuitableBrowser\n    Check the browser\n    returns `true` or `false`\n  */\n  isSuitableBrowser: () => {\n    // IE\n    if( navigator.userAgent.indexOf('MSIE') !== -1 ||\n    navigator.appVersion.indexOf('Trident/') > -1 ||\n    navigator.userAgent.indexOf('Trident/') > -1 ){\n      return false;\n    }\n\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) //TODO rimuovere ondragstart/ondrop (IE)?\n      && 'FormData' in window\n      && 'FileReader' in window\n      && 'fetch' in window;\n  },\n\n  set_has_values: fupl => {\n    let items = fupl.opts.instance_result_wrapper.querySelectorAll('.fupl-item').length;\n    fupl.opts.wrapper.dataset.hasValues = items? 'true' : 'false';\n    if(!items) {\n      // fupl.opts.instance_result_wrapper.innerHTML = fupl.strs[`no_${fupl.opts._type}_text`];\n      fupl.opts.instance_result_wrapper.innerHTML =\n        fupl.opts._type === 'img'?\n          fupl.opts.template_empty_img.replace(/{{no_img_text}}/g, fupl.strs.no_img_text) :\n          fupl.opts.template_empty_doc.replace(/{{no_doc_text}}/g, fupl.strs.no_doc_text);\n    }\n  },\n\n  parse_bytes_value: (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n\n    } else if (bytes < 1024) {\n      return Number((bytes/1024).toFixed(2)).toLocaleString(locales, {maximumFractionDigits: 2}) +\n        '<span class=\"fupl-unit\">KB</span>';\n\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) +\n        '<span class=\"fupl-unit\">KB</span>';\n    }\n  },\n\n  /*\n   Parse the `max_filesize` parameter (if exists) and returns:\n    - `null` if max_filesize === null\n    - `false` if `max_filesize` is not a correct value\n    - the object `{ maxbytes: 123456, unit: 'KB', feedback_size: '1.2KB'}`\n    where\n      - `maxbytes` is max_filesize value in bytes\n      - `unit` is one of 'KB' and 'MB'\n      - `feedback_size` is a textual representation of max_filesize\n         for the purpose of providing end user informations\n  */\n  parse_max_filesize: (filesize_value, locales) =>  {\n    // max_filesize checking and parsing\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // If unit is KB but value is bigger than 1MB,\n      // unit is changed\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  },\n\n  exec_callback: (callback_function, params) => {\n    try {\n      if(typeof callback_function === 'string') {\n\n        let cbk_func = window;\n        callback_function.split('.').forEach( function(item) {\n          cbk_func = cbk_func[item];\n        });\n        cbk_func(params);\n\n      } else {\n        callback_function(params);\n      }\n\n    } catch(error) {\n      alert(`Error: “${callback_function}” callback function doesn't exist`);\n      console.error(error); // eslint-disable-line\n    }\n  }\n\n};\n","/*\n  based on\n  - https://github.com/WolfgangKurz/grabbable\n\n  references:\n  - https://codepen.io/therealDaze/pen/ZaoErp\n  - https://github.com/gridstack/gridstack.js\n  - https://developer.mozilla.org/it/docs/Web/API/HTML_Drag_and_Drop_API\n  - https://www.html5rocks.com/en/tutorials/dnd/basics/\n  - https://kryogenix.org/code/browser/custom-drag-image.html\n  - http://jsfiddle.net/zfnj5rv4/\n*/\n\nlet dragged_element = null,\n  uploader_is_disabled = false;\n\nconst classes = {\n\n    // class added to the FileUploader elment (fupl_options.element)\n    // when a drag is started. It is removed at dragleave\n    sorting_class: 'fupl-sorting',\n\n    // same way, class added to the dragged element\n    sorting_item_class: 'fupl-item-sorting',\n\n    // class added to an item on dragover\n    over_item_class: 'fupl-item-dragover'\n  },\n\n  // broken events cleaning\n  resetAll = () => {\n\n    if( dragged_element ) {\n      dragged_element.classList.remove(classes.sorting_item_class);\n\n      dragged_element.parentNode.querySelectorAll('.' + classes.over_item_class).forEach(item => {\n        item.classList.remove(classes.over_item_class);\n      });\n\n      dragged_element.closest('.fupl').classList.remove(classes.sorting_class);\n    }\n\n    dragged_element = null;\n  };\n\nexport function add_sortable_events(fupl_item, fupl_options) {\n\n  // start dragging\n  fupl_item.addEventListener('dragstart', function(e) {\n    uploader_is_disabled = fupl_options.wrapper.disabled;\n    resetAll();\n    if(!uploader_is_disabled) {\n\n      dragged_element = this;\n\n      // `classes.sorting_class` is added to the dragged element\n      // this prevents the feedback triggered when external files are dropped\n      // in the broswer (look at scss/_fupl.scss)\n      fupl_options.element.classList.add(classes.sorting_class);\n\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.setData('text', 'fupl-sorting');\n\n      this.classList.add(classes.sorting_item_class);\n    }\n\n  }, false);\n\n  // enter positioning over another element (→ e.target == this)\n  fupl_item.addEventListener('dragenter', function(e) {\n\n    // disabled for external files or when the uploader is disabled\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      if (e.stopPropagation) {\n        e.stopPropagation(); // stops the browser from redirecting.\n      }\n      if( this !== dragged_element ) {\n        this.classList.add(classes.over_item_class);\n      }\n    }\n\n  }, false);\n\n  // positioning over another element (→ e.target)\n  fupl_item.addEventListener('dragover', function(e) {\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled ) {\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      e.dataTransfer.dropEffect = 'move';\n      if( this !== dragged_element ) {\n        this.classList.add(classes.over_item_class);\n      }\n    }\n\n    return false;\n  }, false);\n\n  // exit positioning over another element\n  fupl_item.addEventListener('dragleave', function() {\n\n    this.classList.remove(classes.over_item_class);\n  }, false);\n\n  // drop\n  fupl_item.addEventListener('drop', function(e) {\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      if (e.stopPropagation) {\n        e.stopPropagation(); // stops the browser from redirecting.\n      }\n\n      e.preventDefault();\n\n      if(dragged_element) {\n        if(this.previousElementSibling === dragged_element && this.nextElementSibling ) {\n          this.parentNode.insertBefore(dragged_element, this.nextElementSibling);\n\n        } else if( this.nextElementSibling ) {\n          this.parentNode.insertBefore(dragged_element, this);\n\n        // if target element is the last one, the dropped one is positioned after it\n        } else {\n          this.parentNode.insertAdjacentElement('beforeend', dragged_element);\n        }\n      }\n      resetAll();\n    }\n\n    return false;\n\n  }, false);\n\n  // end dragging\n  fupl_item.addEventListener('dragend', function(e) {\n\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      fupl_options.element.classList.remove(classes.sorting_class);\n      resetAll();\n\n      // order variable\n      fupl_options.instance_result_wrapper.querySelectorAll('.fupl-sortable-order').forEach((item,idx) => {\n        item.value = idx;\n      });\n    }\n\n  }, false);\n} // end add_sortable_events\n\n\nexport function activate_sortable(fupl_options) {\n\n  // class added to `fupl_options.instance_result_wrapper`\n  // when `sortable` option is activated\n  fupl_options.instance_result_wrapper.classList.add( 'fupl-sortable' );\n\n}\n","/*\n  Add an element to fupl.opts.instance_result_wrapper\n  and set all needed listeners\n\n  `item_data` obj contains all element data:\n    {\n      id      → file unique id (can be file path too)\n      name    → file name\n      url     → url for any <a> tag present in the element (if it is an image can be a null or not set)\n      src     → `src` attribute. Required if element is an image, otherwise null or not set\n      wi      → image px width (null or not set if not image)\n      he      → image px height (null or not set if not image)\n      size    → file size (bytes)\n      loading → `true` if it is an item being uploaded\n      ...     → any additional instance-specific fields\n    }\n\n  `fupl`                    : is the fupl object\n  `preregistered` === true  : means that the element was previously saved and comes\n                              from the `fupl.opts.values` array\n\n*/\n\nimport {fupl_utilities} from './utilities.js';\nimport {add_sortable_events} from './sortable.js';\n\nexport function create_item(item_data, fupl, preregistered = false) {\n\n  try {\n\n    let item_markup = fupl.opts[`template_${fupl.opts._type}_item_${fupl.opts._mode}`];\n    if( item_markup === null && fupl.opts._mode === 'multiple' ) {\n      item_markup = fupl.opts[`template_${fupl.opts._type}_item_single`];\n    }\n\n    let fupl_item_wrapper = document.createElement('div'); // wrapper to be removed after inserting\n    fupl_item_wrapper.innerHTML = item_markup;\n\n    // delete button\n    let fupl_remove = fupl_item_wrapper.querySelector('.fupl-remove');\n    if(fupl_remove) {\n      fupl_remove.innerHTML = fupl.opts.template_remove_btn\n        .replace(/{{remove_btn_text}}/g, fupl.strs.remove_btn_text);\n    }\n\n    /*\n      element data\n      ============================\n\n      each fupl-item element contains:\n        .fupl-file-name\n        .fupl-file-size\n        .fupl-img → img\n        .fupl-img → a.href\n        .fupl-doc → a.href\n\n    */\n\n    // file name\n    let fupl_file_name = fupl_item_wrapper.querySelector('.fupl-file-name');\n    if(fupl_file_name && item_data.name ) {\n      fupl_file_name.innerHTML = item_data.name;\n      fupl_file_name.title = item_data.name;\n    }\n\n    // size info\n    let fupl_file_size = fupl_item_wrapper.querySelector('.fupl-file-size');\n    if(fupl_file_size ) {\n      let size_string = '';\n      if(fupl.opts._type === 'img' && item_data.wi && item_data.he) {\n        size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n        if(item_data.size) {\n          size_string += ' &ndash; ';\n        }\n      }\n      if(item_data.size) {\n        size_string += fupl_utilities.parse_bytes_value(item_data.size, fupl.opts.locales);\n      }\n\n      fupl_file_size.innerHTML = size_string;\n    }\n\n    // image\n    if( fupl.opts._type === 'img' ) {\n      fupl_item_wrapper.querySelector('.fupl-img').src = item_data.src;\n    }\n\n    // url\n    let fupl_url = fupl_item_wrapper.querySelector('.fupl-url');\n    if( fupl_url) {\n      if(item_data.url) {\n        fupl_url.href = item_data.url;\n      } else {\n        // cambia il tag <a> in <span> se non c'è l'url (al momento del caricamento)\n        let span = document.createElement('span');\n        span.innerHTML = fupl_url.innerHTML;\n        fupl_url.parentNode.replaceChild(span, fupl_url);\n      }\n    }\n\n    let fupl_item = fupl_item_wrapper.querySelector('.fupl-item');\n\n\n    if(item_data.loading) {\n      fupl_item.classList.add('fupl-is-uploading');\n      fupl_item.insertAdjacentHTML('beforeend',\n        fupl.opts.template_loading_element\n      );\n    }\n\n    if(fupl.opts._mode === 'single') {\n      fupl.opts.instance_result_wrapper.innerHTML = fupl_item_wrapper.innerHTML;\n    } else {\n\n      // instance_result_wrapper cleaning (to remove 'no file' string, if present)\n      if( !fupl.opts.instance_result_wrapper.querySelector('.fupl-item')) {\n        fupl.opts.instance_result_wrapper.innerHTML = '';\n      }\n\n      fupl.opts.instance_result_wrapper.insertAdjacentHTML('beforeend',\n        fupl_item_wrapper.innerHTML\n      );\n    }\n\n\n    let fupl_item_dom = fupl.opts.instance_result_wrapper.querySelector('.fupl-item:last-child');\n    fupl_item_dom.dataset.id = item_data.id;\n\n    // remove element listener\n    let fupl_remove_trigger = fupl_item_dom.querySelector('.fupl-remove-trigger');\n    if(fupl_remove_trigger) {\n      fupl_remove_trigger.addEventListener('click', () => {\n        fupl_item_dom.remove();\n\n        let prereg_id = item_data.rel_id? item_data.rel_id : item_data.id;\n\n        if(prereg_id && preregistered) {\n          fupl.opts.wrapper.insertAdjacentHTML('beforeend',\n            `<input type=\"hidden\" name=\"${fupl.opts.delete_varname}\" value=\"${prereg_id}\">`\n          );\n        }\n\n        // controllo se instance_result_wrapper è vuoto\n        // e impostazione di attributo e contenuti\n        fupl_utilities.set_has_values(fupl);\n\n      });\n    }\n\n    //fancybox integration\n    if( fupl.opts.fancybox && fupl.opts._type === 'img' && item_data.url && fupl.opts.fancybox_anchor_markup) {\n      // check for `a.fupl-url` tag and add it if necessary\n      if( !fupl_item_dom.querySelector('a.fupl-url') ) {\n\n        let img_element = fupl_item_dom.querySelector('.fupl-img'),\n          fancybox_wrapper = document.createElement('div');\n        fancybox_wrapper.innerHTML = fupl.opts.fancybox_anchor_markup;\n\n        fancybox_wrapper = fancybox_wrapper.firstChild;\n        img_element.parentNode.insertBefore(fancybox_wrapper, img_element);\n        fancybox_wrapper.appendChild(img_element);\n      }\n\n      fupl_item_dom.querySelector('a.fupl-url').setAttribute('href', item_data.url);\n\n    }\n\n    // extra fields\n    let extra_fields_wrapper = fupl_item_dom.querySelector('.fupl-extra-fields');\n    if(fupl.opts.extra_fields !== null && extra_fields_wrapper) {\n\n      fupl.opts.extra_fields.forEach( item => {\n        extra_fields_wrapper.insertAdjacentHTML('beforeend',\n          item.markup.replace(/{{idx}}/g, item_data.id)\n            .replace(/{{val}}/g, preregistered && item_data[item.value_key]? item_data[item.value_key] : '')\n            .replace(/{{checked}}/g, preregistered && +item_data[item.value_key]? ' checked ' : ' ')\n            // .replace(/{{selected}}/g, preregistered && +item_data[item.value_key]? ' selected ' : ' ')\n            .replace(/{{name}}/g,\n              (preregistered && fupl.opts.registered_extra_field_varname?\n                fupl.opts.registered_extra_field_varname : fupl.opts.varname) +\n              '[' +\n              ((item.use_rel_id && item_data.rel_id)? item_data.rel_id : item_data.id) +\n              '][' + item.value_key + ']'\n            )\n        );\n      });\n      // add `selected` attribute to select extra fields\n      extra_fields_wrapper.querySelectorAll('select[data-selected]:not([data-selected=\"\"]').forEach(sel => {\n        const value = sel.dataset.selected;\n        sel.querySelector(`option[value=\"${value}\"]`)?.setAttribute('selected', true);\n      });\n\n      // stop bubbling when sortable\n      if( fupl.opts.sortable ) {\n        extra_fields_wrapper.querySelectorAll('select, input, textarea').forEach(item => {\n          item.setAttribute('draggable', 'false');\n          ['dragstart', 'drag', 'mousedown'].forEach( ev => {\n            item.addEventListener(ev, e => {\n              if(ev !== 'mousedown') {e.preventDefault();}\n              e.stopPropagation();\n            });\n          });\n        });\n      }\n    }\n\n    // sortable\n    if( fupl.opts.sortable ) {\n      fupl_item_dom.setAttribute('draggable', true);\n\n      // order_value starts from zero\n      let order_value = fupl.opts.instance_result_wrapper.querySelectorAll('.fupl-item').length -1;\n\n      fupl_item_dom.insertAdjacentHTML('beforeend',\n        '<input type=\"hidden\" class=\"fupl-sortable-order\" name=\"' +\n            (preregistered && fupl.opts.registered_extra_field_varname?\n              fupl.opts.registered_extra_field_varname :\n              fupl.opts.varname) +\n            `[${item_data.id}][${fupl.opts.sortable_varname}]\" value=\"${order_value}\">`\n      );\n\n      if(fupl.opts.sortable_icon) {\n        fupl_item_dom.querySelector('.fupl-sortable-icon').innerHTML =\n          fupl.opts.sortable_icon\n            .replace('{{sortable_icon_title_text}}', fupl.strs.sortable_icon_title_text);\n      }\n      add_sortable_events(fupl_item_dom, fupl.opts);\n    }\n\n    return fupl.opts.instance_result_wrapper.querySelector('.fupl-item:last-child');\n\n  } catch(e) {\n    console.error(e); // eslint-disable-line\n  }\n\n}\n","// TODO update to dialog element\n\nexport function fupl_alert(mes, fupl_opts) {\n\n  let alert_container = fupl_opts.element.querySelector('.fupl-alert-body ul');\n\n  if(typeof mes === 'string') {\n    mes = [mes];\n  }\n\n\n  if(!alert_container) {\n    fupl_opts.element.insertAdjacentHTML('beforeend',\n      fupl_opts.fupl_alert_template\n    );\n\n    fupl_opts.element.querySelector('.fupl-alert-body').innerHTML = '<ul></ul>';\n\n    alert_container = fupl_opts.element.querySelector('.fupl-alert-body ul');\n\n    fupl_opts.element.querySelector('.fupl-alert button').addEventListener('click', () => {\n      fupl_opts.element.querySelector('.fupl-alert-overlay').remove();\n    }, false);\n  }\n\n  mes.forEach(item => {\n    alert_container.insertAdjacentHTML('afterbegin', `<li>${item}</li>`);\n  });\n\n\n}\n","/*\nPerforms all the checks, calls the remote url via ajax\nand generates the feedback for the user\n*/\n\nimport {create_item} from './create-item.js';\nimport {fupl_utilities} from './utilities.js';\nimport {build_hidden_fields} from './build-hidden-fields.js';\nimport {fupl_alert} from './alert.js';\n\n\nexport function send_files(filelist, fupl) {\n\n  // disable the form submit button until the upload is completed\n  const disable_submit = (mode) => {\n      // mode === true → disable, false → enable\n      const _form = fupl.opts.element.closest('form');\n\n      if(fupl.opts.disable_submit && _form) {\n        const submit_btns = _form.querySelectorAll('[type=\"submit\"]');\n\n        submit_btns.forEach( btn => {\n          btn.disabled = mode;\n        });\n\n        // TODO: removeEventListener doesn't work\n        // const submitHandler = (e) => {\n        //   e.preventDefault();\n        //   //return false;\n        // };\n        // if(mode === true) {\n        //   _form.addEventListener('submit', submitHandler, false);\n        // } else {\n        //   if( !fupl.opts.instance_result_wrapper.querySelector('.fupl-item.fupl-is-uploading')) {\n        //     _form.removeEventListener('submit', submitHandler, false);\n        //   }\n        // }\n      }\n    },\n\n    /*\n    uploadFile\n    ajax upload\n    https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n    current_item contains:\n      - `id`: element unique id\n      - `file`: filelist obj\n      - `width` e height: image pixel sizes. null if not an image\n      - `tmp_file`: temporary server file name (new uplaods only)\n\n    */\n    uploadFile = function ( current_item, img_preview ) {\n\n      // disabling form\n      disable_submit(true);\n\n      // aggiunta elemento all'uploader\n      let this_item = create_item({\n          id       : current_item.id,\n          name     : current_item.file.name,\n          url      : null,\n          src      : img_preview,\n          wi       : current_item.width,\n          he       : current_item.height,\n          size     : current_item.file.size,\n          // img_type : current_item.file.img_type, // TODO non necessario, controllare\n          loading  : true\n        }, fupl),\n\n\n        fupl_progress= this_item.querySelector('.fupl-progress'),\n        fupl_loading_wrapper = this_item.querySelector('.fupl-loading'),\n\n        xhr_error_message = fupl.strs.alert_xhr_error.replace(/{{file_name}}/, current_item.file.name);\n\n      //console.log(this_item); // eslint-disable-line\n\n      const remove_item_on_error = () => {\n        this_item.querySelector('.fupl-remove-trigger').click();\n      };\n\n      // custom callback function\n      if( fupl.opts.upload_start_callback ) {\n        fupl_utilities.exec_callback(fupl.opts.upload_start_callback, {\n          item              : current_item,\n          img_preview       : img_preview,\n          uploader_options  : fupl\n        });\n      }\n\n      new Promise(function(resolve, reject) {\n        let ajax = new XMLHttpRequest();\n        ajax.open( fupl.opts.ajax_method, fupl.opts.uploader_url, true );\n\n        ajax.onload = function() {\n\n          if( ajax.status >= 200 && ajax.status < 400 ) {\n\n            const response = JSON.parse( ajax.responseText );\n\n            /*\n            jsonResponse:\n              {\n                \"tmp_file\": \"temp_file_name\",\n                \"error\": null\n              }\n            */\n            if(response.error) {\n\n              fupl_alert( xhr_error_message, fupl.opts );\n              console.error( response.error ); // eslint-disable-line\n              reject();\n\n            } else {\n              current_item.tmp_file = response.tmp_file;\n              resolve();\n            }\n\n            // custom callback function\n            if( fupl.opts.upload_complete_callback ) {\n              fupl_utilities.exec_callback(fupl.opts.upload_complete_callback, {\n                item          : current_item,\n                server_error  : response.error,\n                fupl          : fupl\n              });\n            }\n\n            if(fupl.opts.debug) {\n              /* eslint-disable */\n              console.groupCollapsed(`FileUploader ${fupl.opts._vers} ajax response`);\n              console.log(response);\n              console.groupEnd();\n              /* eslint-enable */\n            }\n\n          } else {\n            fupl_alert( xhr_error_message, fupl.opts );\n            /* eslint-disable */\n            console.error( ajax.status, ajax.statusText );\n            console.error( ajax.responseText );\n            /* eslint-enable */\n          }\n\n          reject();\n        };\n\n        ajax.onerror = function() {\n          fupl_alert( xhr_error_message, fupl.opts );\n          /* eslint-disable */\n          if(fupl.opts.debug) {\n            console.error( ajax.status,  ajax.statusText );\n            console.error( ajax.responseText );\n          }\n          /* eslint-enable */\n\n          reject();\n        };\n\n        ajax.upload.addEventListener('progress', function (e) {\n          if( fupl.opts.alternative_loading_func ) {\n\n            fupl_utilities.exec_callback(fupl.opts.alternative_loading_func, ...[e, fupl]);\n\n          } else {\n            let perc_loaded = Math.round(e.loaded / e.total * 100.0) || 0;\n\n            //console.log(e.loaded ,e.total, perc_loaded); // eslint-disable-line\n            if(fupl_progress) {\n              if(e.lengthComputable) {\n                perc_loaded = perc_loaded === Infinity? 100 : perc_loaded;\n                this_item.querySelector('.fupl-progress').value = perc_loaded;\n              } else {\n                fupl_loading_wrapper.innerHTML = fupl.opts.template_alternative_loading_element;\n                fupl_progress = null;\n              }\n            }\n          }\n        }, false);\n\n\n        let fileData = new FormData();\n        fileData.append('file', current_item.file);\n        ajax.send( fileData );\n      }) // end promise\n        .then(\n          // resolve\n          function (  ) {\n            //console.log('resolve'); // eslint-disable-line\n            this_item.classList.remove('fupl-is-uploading');\n            this_item.querySelector('.fupl-loading').remove(); // elemento loading\n\n            this_item.insertAdjacentHTML('beforeend',\n              build_hidden_fields(current_item, fupl.opts)\n            );\n\n            fupl_utilities.set_has_values(fupl);\n\n            // restoring submit\n            disable_submit(false);\n\n          },\n          //reject\n          function (  ) {\n            //console.log('reject'); // eslint-disable-line\n            remove_item_on_error();\n            fupl_utilities.set_has_values(fupl);\n          }\n        );\n\n    };\n\n  if( filelist.length ) {\n\n    // https://stackoverflow.com/questions/38362231/\n    // how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n    [...filelist].forEach(function (filelist_item, idx) {\n      try {\n\n        const ext = filelist_item.name.split('.').pop().toLowerCase();\n\n        let current_item = {\n          id: 'fupl_item_' + Date.now() + '_' + idx, // id unico\n          file: filelist_item,\n          width: null,\n          height: null,\n          tmp_file: null,\n\n          // TODO i file svg, se con attributo width e height, permettono la rilevazione delle dimensioni, utilizzare?\n\n          // isImg: fupl_utilities.mimetypes['img+svg'].indexOf(filelist_item.type) !== -1 ||\n          //   fupl_utilities.mimetypes['img+svg'].indexOf( '.' + ext ) !== -1,\n\n          isBitmapImg: fupl_utilities.mimetypes.img.indexOf(filelist_item.type) !== -1 ||\n            fupl_utilities.mimetypes.img.indexOf( '.' + ext ) !== -1\n          // img_type: fupl.opts._type === 'img'?\n          //   (filelist_item.type === 'image/svg+xml' ? 'svg' : 'bitmap') : null\n        };\n\n        // TODO unificare questo controllo e il successivo\n\n        // filetype check (for drag & drop and browsers that don't support accept)\n        if( fupl.opts.accept.length ) {\n          if( fupl.opts.accept.indexOf( filelist_item.type ) === -1 &&\n            fupl.opts.accept.indexOf( '.' + ext ) === -1) {\n            console.log(filelist_item.type);\n            throw fupl.strs.alert_file_format_error\n              .replace(/{{file_name}}/, filelist_item.name );\n          }\n        } // end filetype check\n\n        // controllo formati immagine ammessi\n        if( fupl.opts._type === 'img' && (fupl_utilities.mimetypes.img.indexOf( filelist_item.type ) === -1 ||\n          fupl_utilities.mimetypes.img.indexOf( '.' + ext ) === -1)\n        ) {\n\n          throw fupl.strs.alert_file_format_error\n            .replace(/{{file_name}}/, filelist_item.name );\n        }\n\n        // maxfilesize check\n        if( fupl.opts.max_filesize !== null ) {\n          if( filelist_item.size > fupl.opts.max_filesize.maxbytes ) {\n            let item_parsed_size = fupl_utilities.parse_bytes_value(filelist_item.size, fupl.opts.locales);\n\n            throw fupl.strs.alert_file_size_error\n              .replace(/{{file_name}}/, filelist_item.name )\n              .replace(/{{file_size}}/, item_parsed_size )\n              .replace(/{{allowed_size}}/, fupl.opts.max_filesize.feedback_size );\n          }\n        } // end maxfilesize check\n\n        // images\n\n\n        if( current_item.isBitmapImg ) {\n          let reader  = new FileReader();\n          reader.addEventListener('load', function () {\n\n            let image = new Image();\n            image.src = reader.result;\n            image.addEventListener('load', function () {\n\n              let error_messages = [];\n              current_item.width=image.width;\n              current_item.height=image.height;\n\n              if( fupl.opts.img_w && image.width !== fupl.opts.img_w ) {\n                error_messages.push(\n                  fupl.strs.alert_img_exact_width_err\n                    .replace(/{{image_dimension}}/, image.width)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_w)\n                );\n\n              } else if(fupl.opts.img_min_w && image.width < fupl.opts.img_min_w) {\n                error_messages.push(\n                  fupl.strs.alert_img_min_width_err\n                    .replace(/{{image_dimension}}/, image.width)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_min_w)\n                );\n\n              } else if(fupl.opts.img_max_w && image.width > fupl.opts.img_max_w) {\n                error_messages.push(\n                  fupl.strs.alert_img_max_width_err\n                    .replace(/{{image_dimension}}/, image.width)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_max_w)\n                );\n              }\n\n              if (fupl.opts.img_h && image.height !== fupl.opts.img_h) {\n                error_messages.push(\n                  fupl.strs.alert_img_exact_height_err\n                    .replace(/{{image_dimension}}/, image.height)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_h)\n                );\n\n              } else if(fupl.opts.img_min_h && image.height < fupl.opts.img_min_h) {\n                error_messages.push(\n                  fupl.strs.alert_img_min_height_err\n                    .replace(/{{image_dimension}}/, image.height)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_min_h)\n                );\n\n              } else if(fupl.opts.img_max_h && image.height > fupl.opts.img_max_h) {\n                error_messages.push(\n                  fupl.strs.alert_img_max_height_err\n                    .replace(/{{image_dimension}}/, image.height)\n                    .replace(/{{allowed_dimension}}/, fupl.opts.img_max_h)\n                );\n\n              }\n\n              // aspect ratio\n              if(fupl.opts.img_aspect_ratio_parsed) {\n                let img_ratio = Math.round(((image.width / image.height) + Number.EPSILON) * fupl.opts.aspect_ratio_accuracy) / fupl.opts.aspect_ratio_accuracy;\n                if(img_ratio !== fupl.opts.img_aspect_ratio_parsed) {\n                  error_messages.push(\n                    fupl.strs.alert_img_ratio_err\n                      .replace(/{{aspect_ratio}}/, fupl.opts.img_aspect_ratio)\n                  );\n                }\n              }\n\n              if( error_messages.length ) {\n                error_messages = error_messages\n                  .map(item => item.replace(/{{file_name}}/, filelist_item.name ) );\n                fupl_alert(error_messages, fupl.opts );\n\n              } else {\n                uploadFile( current_item, reader.result );\n              }\n\n            }, false); // end image.addEventListener(\"load\"\n\n          }, false); // end reader.addEventListener(\"load\"\n\n          reader.readAsDataURL( filelist_item );\n\n          // } else if(current_item.img_type === 'svg') { // svg\n\n          //   let reader = new FileReader();\n\n          //   reader.addEventListener('load', () => {\n\n          //     let image = new Image();\n          //     image.src = reader.result;\n\n          //     image.addEventListener('load', function () {\n          //       current_item.width=image.width;\n          //       current_item.height=image.height;\n          //     });\n\n          //     uploadFile( current_item,\n          //       reader.result\n          //       //'data:image/svg+xml;base64,' +  window.btoa(event.target.result)\n          //     );\n          //   });\n          //   reader.readAsDataURL(filelist_item);\n\n        } else { // not image\n          uploadFile( current_item );\n\n        } // end if image\n\n      } catch (errormessage) {\n        fupl_alert( errormessage, fupl.opts);\n      }\n    }); // end foreach\n\n  } // end if( filelist.length )\n\n}\n","/*\nGenerate hidden fields with values to be sent to server\nReturns the hidden fields html string\n*/\nimport { fupl_utilities } from './utilities.js';\n\nexport function build_hidden_fields(current_item, fupl_options) {\n\n  // normalize ascii chars > 127 (and more)\n  const normalize_file_name = filename => {\n    let converted = '';\n    const std_char = '-', // char for standrd substitutions\n      conversionTable = { // Reference table Unicode vs ASCII\n        'à' : 'a', // 224\n        'è' : 'e', // 232\n        'é' : 'e', // 233\n        'ì' : 'i', // 236\n        'ò' : 'o', // 242\n        'ù' : 'u', // 249\n        'À' : 'A', // 192\n        'È' : 'E', // 200\n        'É' : 'E', // 201\n        'Ì' : 'I', // 204\n        'Ò' : 'O', // 210\n        'Ù' : 'U', // 217\n        '\\'' : std_char, // 39\n        '|' : std_char, // 124\n        '!' : std_char, // 33\n        '\"' : std_char, // 34\n        '$' : std_char, // 36\n        '%' : std_char, // 37\n        '&' : std_char, // 38\n        '/' : std_char, // 47\n        '(' : std_char, // 40\n        ')' : std_char, // 41\n        '=' : std_char, // 61\n        '?' : std_char, // 63\n        '^' : std_char, // 94\n        '*' : std_char, // 42\n        '[' : std_char, // 91\n        ']' : std_char, // 93\n        'ç' : 'c', // 231\n        '@' : std_char, // 64\n        '#' : std_char, // 35\n        '<' : std_char, // 60\n        '>' : std_char, // 62\n        'ü' : 'u', // 252\n        'Ü' : 'U', // 220\n        'ñ' : 'n', // 241\n        'Ñ' : 'N', // 209\n        '~' : std_char, // 126\n        ':' : std_char,\n        '\\\\' : std_char\n      };\n\n    for(var i = 0; i < filename.length; i++) {\n      if( filename[i] in conversionTable) {\n        converted += conversionTable[filename[i]];\n\n      } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n        converted += '';\n\n      } else if(filename.charCodeAt(i) > 127 ) {\n        converted += std_char;\n\n      } else {\n        converted += filename.charAt(i);\n      }\n    }\n\n    return converted.replace(/ /g, std_char)\n      .replace(new RegExp(`^${std_char}+`), '')\n      .replace(new RegExp(`${std_char}+`,'g'), std_char);\n  };\n\n  let hidden_fields = '',\n    field_values = {\n      'tmp_file'  : current_item.tmp_file,\n      'file_name' : normalize_file_name(current_item.file.name),\n      'size'      : current_item.file.size,\n      'type'      : current_item.file.type\n    };\n\n  // if(fupl_options._type === 'img') {\n  if(current_item.isBitmapImg) {\n    field_values.width = current_item.width;\n    field_values.height = current_item.height;\n  }\n  for (let _key in field_values) {\n    hidden_fields += '<input type=\"hidden\" '+\n      'name=\"' + fupl_options.varname + '[' + current_item.id +'][' + _key + ']\" '+\n      'value=\"' + ((field_values[_key] !== null && field_values[_key] !== undefined)? field_values[_key] : '') +'\">';\n  }\n\n  return '<div class=\"fupl-hiddens\">' + hidden_fields + '</div>';\n\n}\n","import {fupl_utilities} from './utilities.js';\nimport {create_info_text} from './create-info-text.js';\nimport {activate_sortable} from './sortable.js';\nimport {create_item} from './create-item.js';\nimport {set_listeners} from './set-listeners.js';\n\nexport function createUploader(fupl) {\n\n  try {\n\n    // check for input[file] and label elements\n    let _input = fupl.opts.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl.opts.element.querySelector('label');\n\n    // parsing `accept` parameter and attribute, if exist\n    if( fupl.opts.filetype === 'auto' ) {\n\n      let accept_attr = [],\n        accept_params = [];\n\n      if( fupl.opts.accept !== null ) {\n        accept_params = fupl.opts.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl.opts.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl.opts.accept = fupl_utilities.mimetypes[fupl.opts.filetype];\n    }\n\n    // `max_filesize` parsing\n    let max_filesize = fupl_utilities.parse_max_filesize(fupl.opts.max_filesize, fupl.opts.locales);\n    if( max_filesize === false ) {\n      throw new Error( `FileUploader: incorrect value for “max_filesize” parameter (${fupl.opts.max_filesize})`);\n    } else {\n      fupl.opts.max_filesize = max_filesize;\n    }\n\n    // `multiple` parameter or attribute\n    fupl.opts.multiple = Boolean(fupl.opts.multiple || (_input && _input.hasAttribute('multiple') ));\n\n    // `required` parameter or attribute\n    fupl.opts.required = Boolean(fupl.opts.required || (_input && _input.hasAttribute('required') ));\n\n    // `disabled` parameter or attribute\n    fupl.opts.disabled = Boolean(fupl.opts.disabled || (_input && _input.hasAttribute('disabled') ));\n\n\n    // uploader mode and type\n    fupl.opts._type = ['img', 'svg', 'img+svg'].indexOf(fupl.opts.filetype) !== -1? 'img' : 'doc';\n    fupl.opts._mode = fupl.opts.multiple? 'multiple' : 'single';\n\n    // label text (from element of `uploader_legend_text` parameter)\n    if( !fupl.opts.uploader_legend_text && original_label) {\n      fupl.opts.uploader_legend_text = original_label.innerHTML;\n    }\n    // label not set\n    if ( !fupl.opts.uploader_legend_text ) {\n      fupl.opts.uploader_legend_text = '__legend__';\n    }\n\n    // main class is added to FileUploader element\n    fupl.opts.element.classList.add('fupl');\n\n    // wrapper\n    fupl.opts.wrapper = document.createElement('fieldset');\n    fupl.opts.element.parentNode.insertBefore(fupl.opts.wrapper, fupl.opts.element);\n    fupl.opts.wrapper.appendChild(fupl.opts.element);\n    fupl.opts.wrapper.classList.add('fupl-wrapper');\n    fupl.opts.wrapper.classList.add('fupl-type-' + fupl.opts._type );\n    if(fupl.opts.multiple) {\n      fupl.opts.wrapper.classList.add('fupl-multiple');\n    }\n    // custom classes\n    if( fupl.opts.wrapper_extra_class ) {\n      fupl.opts.wrapper.classList.add( ...fupl.opts.wrapper_extra_class.split(' ') );\n    }\n\n    // uploader legend\n    if( fupl.opts.uploader_legend ) {\n      let _class = ['fupl-legend'];\n      if( fupl.opts.uploader_legend_class ) {\n        _class.push(fupl.opts.uploader_legend_class);\n      }\n      if( fupl.opts.required ) {\n        _class.push('required');\n      }\n\n      fupl.opts.element.insertAdjacentHTML('beforebegin',\n        '<legend' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n          fupl.opts.uploader_legend_text +\n        '</legend>'\n      );\n      fupl.opts.wrapper.classList.add( 'fupl-has-legend' );\n    }\n\n    if(fupl.opts.help_text) {\n      fupl.opts.element.insertAdjacentHTML('beforebegin',\n        `<div class=\"fupl-help-text\">${fupl.opts.help_text}</div>`\n      );\n    }\n\n    // uploader template\n    fupl.opts.element.innerHTML = fupl.opts.template_main;\n\n    fupl.opts.instance_input = fupl.opts.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl.opts.instance_label = fupl.opts.element.querySelector('.fupl-panel label');\n    fupl.opts.instance_dd_text = fupl.opts.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl.opts.instance_info_text = fupl.opts.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl.opts.instance_result_wrapper = fupl.opts.element.querySelector('.fupl-result');\n\n\n    // inserting text and attributes\n    // if( fupl.opts.required ) {\n    //   fupl.opts.instance_input.setAttribute('required', '');\n    // }\n    if( fupl.opts.multiple ) {\n      fupl.opts.instance_input.setAttribute('multiple', '');\n    }\n    if( fupl.opts.accept !== null ) {\n      fupl.opts.instance_input.setAttribute('accept', fupl.opts.accept.join(','));\n    }\n\n    // adding data-required attribute to wrapper\n    if( fupl.opts.required ) {\n      fupl.opts.wrapper.dataset.required = 'true';\n    }\n\n    // adding data-disabled attribute to wrapper\n    if( fupl.opts.disabled ) {\n      fupl.opts.wrapper.setAttribute('disabled', true);\n      fupl.opts.wrapper.setAttribute('aria-disabled', true);\n    }\n\n\n    fupl.opts.instance_label.insertAdjacentHTML('beforeend',\n      fupl.strs[`${fupl.opts._type}_${fupl.opts._mode}_select_text`]\n    );\n    if(fupl.opts.input_label_class) {\n      fupl.opts.instance_label.classList.add(...fupl.opts.input_label_class.split(' '));\n    }\n    fupl.opts.instance_dd_text.innerHTML = fupl.strs[`${fupl.opts._type}_${fupl.opts._mode}_drag_text`];\n\n\n\n    // info text\n    if( fupl.opts.show_info_text ) {\n      if(fupl.opts.custom_info_text) {\n        fupl.opts.instance_info_text.innerHTML = fupl.opts.custom_info_text;\n      } else {\n        fupl.opts.instance_info_text.innerHTML = create_info_text(fupl);\n      }\n    }\n\n\n    // Sortable\n    if( fupl.opts.sortable) {\n      if( fupl.opts.multiple && fupl.opts.sortable_varname ) {\n\n        activate_sortable(fupl.opts);\n\n      } else {\n        throw new Error('FileUploader: incorrect “sortable” settings:\\n' +\n          `\"sortable\": ${fupl.opts.sortable? 'true' : 'false'}\\n` +\n          `\"multiple\": ${fupl.opts.multiple? 'true' : 'false'}\\n` +\n          `\"sortable_varname\": \"${fupl.opts.sortable_varname}\"`\n        );\n      }\n\n    }\n\n    // adding registered values\n    // fupl.opts.values must be an array of objects\n    // if it is a single object, it is wrapped in an array\n    if(fupl.opts.values) {\n      if(typeof fupl.opts.values === 'object') {\n        if(!Array.isArray(fupl.opts.values)) {\n          fupl.opts.values = [fupl.opts.values];\n        }\n      } else {\n        throw new Error('FileUploader: incorrect “values” parameter');\n      }\n    }\n\n    if( fupl.opts.values && fupl.opts.values.length ) {\n\n      fupl.opts.values.forEach( item => {\n        create_item(item, fupl, true); // true means that the element comes from the server\n      });\n\n    }\n    fupl_utilities.set_has_values(fupl);\n\n    // gestione aggiunta nuovi elementi\n    set_listeners(fupl);\n\n\n    // calling init_callback, if present\n    if( fupl.opts.init_callback !== null ) {\n      fupl_utilities.exec_callback(fupl.opts.init_callback, fupl);\n    }\n\n    // calling fancybox_callback_func, if present\n    if( fupl.opts.fancybox && fupl.opts.fancybox_callback_func !== null ) {\n      fupl_utilities.exec_callback(fupl.opts.fancybox_callback_func, fupl.opts);\n    }\n\n    //debug\n    if( fupl.opts.debug ) {\n\n      const parsed_options= Object.keys(fupl.opts).sort()\n        .reduce((result, key) => ( result[key] = JSON.stringify(fupl.opts[key]), result), {} );\n\n      //parsed_options is exposed as global object for debug purposes\n      if(window.fileUploderOpts === undefined) {\n        window.fileUploderOpts = {};\n      }\n      window.fileUploderOpts[fupl.opts.varname] = parsed_options;\n\n      /* eslint-disable */\n      console.groupCollapsed(`FileUploader ${fupl.opts._vers} options`);\n      console.table(parsed_options);\n      console.groupEnd();\n      /* eslint-enable */\n    } // end if debug\n\n  } catch(e) { //throw \"error\"\n    console.error( e ); // eslint-disable-line\n  } // finally {}\n\n} // end createUploader\n\n","/**\n * create_info_text\n * Creates a string of information about the file requirements\n *\n */\n\nexport function create_info_text(fupl) {\n\n\n  let info_text = [];\n\n  switch (fupl.opts.filetype) {\n    case 'img':\n      info_text.push( fupl.strs.info_text_std_imgs );\n      break;\n\n    case 'img+svg':\n      info_text.push( fupl.strs.info_text_imgs_svg);\n      break;\n\n    case 'svg':\n      info_text.push( fupl.strs.info_text_svg_file);\n      break;\n\n    case 'pdf':\n      info_text.push( fupl.strs.info_text_pdf_file);\n      break;\n  }\n\n  if( fupl.opts.max_filesize !== null ) {\n    info_text.push( fupl.strs.info_text_max_filesize );\n  }\n\n  if( fupl.opts.filetype === 'img' || fupl.opts.filetype === 'img+svg' ) {\n\n    let img_size_info = [];\n\n    if( fupl.opts.img_w && fupl.opts.img_h ) {\n      img_size_info.push( fupl.strs.info_text_img_fixed_size );\n\n    } else {\n\n      if(fupl.opts.img_min_w && fupl.opts.img_min_h && fupl.opts.img_min_w === fupl.opts.img_min_h) {\n        img_size_info.push( fupl.strs.info_text_img_equal_min_size );\n\n      } else if(fupl.opts.img_max_w && fupl.opts.img_max_h && fupl.opts.img_max_w === fupl.opts.img_max_h) {\n        img_size_info.push( fupl.strs.info_text_img_equal_max_size );\n\n      } else {\n\n        if( fupl.opts.img_w ) {\n          img_size_info.push( fupl.strs.info_text_img_fixed_width );\n\n        } else if( fupl.opts.img_min_w && fupl.opts.img_max_w ) {\n          img_size_info.push( fupl.strs.info_text_img_width_range );\n\n        } else if( fupl.opts.img_min_w ) {\n          img_size_info.push( fupl.strs.info_text_img_min_width );\n\n        } else if( fupl.opts.img_max_w  ) {\n          img_size_info.push( fupl.strs.info_text_img_max_width );\n        }\n\n        if( fupl.opts.img_h ) {\n          img_size_info.push( fupl.strs.info_text_img_fixed_height );\n\n        } else if( fupl.opts.img_min_h && fupl.opts.img_max_h ) {\n          img_size_info.push( fupl.strs.info_text_img_height_range );\n\n        } else if( fupl.opts.img_min_h ) {\n          img_size_info.push( fupl.strs.info_text_img_min_height );\n\n        } else if( fupl.opts.img_max_h ) {\n          img_size_info.push( fupl.strs.info_text_img_max_height );\n        }\n\n      }\n    }\n\n    if(fupl.opts.img_aspect_ratio !== null) {\n      img_size_info.push( fupl.strs.info_text_img_aspect_ratio );\n    }\n\n    if(img_size_info.length) {\n      info_text.push(\n        (fupl.opts.filetype === 'img+svg' ? fupl.strs.info_text_imgs_svg_size_info_text : '') +\n        img_size_info.join(', ')\n      );\n    }\n  }\n\n  info_text = info_text.map( item => {\n    return item.replace(/{{img_w}}/, fupl.opts.img_w)\n      .replace(/{{img_h}}/, fupl.opts.img_h)\n      .replace(/{{img_min_w}}/, fupl.opts.img_min_w)\n      .replace(/{{img_min_h}}/, fupl.opts.img_min_h)\n      .replace(/{{img_max_w}}/, fupl.opts.img_max_w)\n      .replace(/{{img_max_h}}/, fupl.opts.img_max_h)\n      .replace(/{{img_aspect_ratio}}/, fupl.opts.img_aspect_ratio)\n      .replace(/{{max_filesize}}/, fupl.opts.max_filesize? fupl.opts.max_filesize.feedback_size : null);\n  });\n\n  let str = info_text.join(fupl.opts.info_text_join_string);\n  str = str.charAt(0).toUpperCase() + str.slice(1);\n\n  if( fupl.opts.info_text_wrap_string && str ) {\n    str = fupl.opts.info_text_wrap_string[0] + str + fupl.opts.info_text_wrap_string[1];\n  }\n\n  if(fupl.opts.filetype === 'img' || fupl.opts.filetype === 'img+svg') {\n    str += '<div>' + fupl.strs.info_text_img_optimize_info + '</div>';\n  }\n\n  if(fupl.opts.filetype === 'svg' || fupl.opts.filetype === 'img+svg') {\n    str += '<div>' + fupl.strs.info_text_svg_optimize_info + '</div>';\n  }\n\n  return str;\n}\n","import {send_files} from './send-files.js';\nimport {fupl_alert} from './alert.js';\n\n// https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\nexport function set_listeners(fupl) {\n\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }, false);\n  });\n\n  ['dragover', 'dragenter'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, () => {\n      fupl.opts.element.classList.add( fupl.opts.element_dragover_class );\n    }, false);\n  });\n\n  ['dragleave', 'dragend'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, () => {\n      fupl.opts.element.classList.remove( fupl.opts.element_dragover_class );\n    }, false);\n  });\n\n  fupl.opts.element.addEventListener('drop', (e) => {\n    fupl.opts.element.classList.remove( fupl.opts.element_dragover_class );\n    if(!fupl.opts.wrapper.hasAttribute('disabled')) {\n      let files = e.dataTransfer.files;\n\n      if(files.length) { // if 0 is a reordering or another event\n        if( !fupl.opts.multiple && files.length > 1 ) {\n          fupl_alert(fupl.strs.alert_too_much_files, fupl.opts);\n        } else {\n          send_files( files, fupl );\n        }\n      }\n    }\n  }, false);\n\n  // selecting thru input element\n  fupl.opts.instance_input.addEventListener('change', () => {\n    send_files( fupl.opts.instance_input.files, fupl );\n  });\n\n}\n","/*!@preserve\n *\n * FileUploader 2\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2021\n *\n */\n\nimport fupl_strings_it from './i18n/it.js';\nimport {default_options} from './src/default-options.js';\n\nimport {fupl_init} from './src/init.js';\n\nexport default function FileUploader( params ) {\n\n  /*\n  params obj => {\n    selector    : [string] selector of fileuploader elements\n    options     : [object] custom options\n    css         : [string] css url\n    local_strs  : [object] localized strings\n  }\n  */\n\n  const _VERSION = '3.5.0';\n\n  const strs = Object.assign( {}, fupl_strings_it, params.local_strs || {} );\n\n  let opts = Object.assign( {_vers: _VERSION}, default_options, params.options || {});\n\n  // change all Mustache-Like Variables with corresponding strings\n  for(let i in opts) {\n    if(typeof opts[i] === 'string') {\n      opts[i] = opts[i].replace(/\\{\\{(.*?)\\}\\}/g, (match, substr) => strs[substr]);\n    }\n  }\n\n  fupl_init({\n    selector : params.selector || '.file-uploader2', // used in fupl_init only\n    css      : params.css || null,                   // used in fupl_init only\n    opts     : opts,\n    strs     : strs\n  });\n}\n","import {fupl_utilities} from './utilities.js';\nimport {createUploader} from './create-uploader.js';\n\nexport  function fupl_init(fupl) {\n\n  // browser check\n  if( !fupl_utilities.isSuitableBrowser() ) {\n    if ( 'console' in window ) {\n      console.error('This browser can\\'t run FileUploader'); // eslint-disable-line\n    }\n    return;\n  }\n\n  // CSS loading\n  if(fupl.css) {\n    document.head.insertAdjacentHTML('beforeend',\n      '<link rel=\"stylesheet\" href=\"' + fupl.css + '\" type=\"text/css\" media=\"all\">'\n    );\n  }\n\n  // `fupl.selector` elements are selected and JSFileUploader is started\n  // each element has its own options which merge with `fupl.opts`\n  document.querySelectorAll(fupl.selector).forEach( upl_element => {\n\n    /*\n      merge of global options and instance ones\n      instance options may be loaded\n      * as single data elemenys (i.e. data-filetype=\"img\"),\n        each data attribute corresponds to an item of the `default_options` array\n\n      * as `[data-file-uploader]` json value (i.e data-file-uploader='{\"filetype\":\"img\"}')\n        json has the same structure of the `default_options` array\n\n      instance options overwrites global ones (fupl.opts)\n      single data attributes overwrites json items\n    */\n\n    let all_data_params = Object.assign({}, upl_element.dataset);\n\n    // the fileUploader element contains json data and is parsed separately\n    delete all_data_params.fileUploader;\n\n    let instance_opts = Object.assign(\n      {},\n      fupl.opts,\n      JSON.parse(upl_element.dataset.fileUploader || '{}' ),\n      all_data_params\n    );\n\n    // the element itself is added to `instance_options`:\n    instance_opts.element = upl_element;\n\n    // last check and fileuploader starting\n    try {\n      //  uploader remote url can't be null\n      if( !instance_opts.uploader_url ) {\n        throw new Error( 'FileUploader: missing `uploader_url` parameter' );\n      }\n\n      // filetype parameter check\n      instance_opts.filetype = instance_opts.filetype.toLowerCase();\n\n      // aspect_ratio_accuracy\n      instance_opts.aspect_ratio_accuracy = 10 ** +instance_opts.aspect_ratio_accuracy;\n\n      // img+svg key aliases\n      if(['svg+img', 'img-svg', 'svg-img'].indexOf(instance_opts.filetype) !== -1) {\n        instance_opts.filetype = 'img+svg';\n      }\n      if( Object.keys( fupl_utilities.mimetypes ).indexOf(instance_opts.filetype) === -1 ) {\n        throw new Error( 'FileUploader: incorrect `filetype` parameter' );\n      }\n    } catch(e) {\n      console.error( e );// eslint-disable-line\n    }\n\n    // these parameters must be arrays but can retrieved as strings from data attributes\n    const json_params = [\n      'info_text_wrap_string',\n      'values',\n      'extra_fields'\n    ];\n\n\n    json_params.forEach(item => {\n      try {\n        if(typeof instance_opts[item] === 'string' ) {\n          instance_opts[item] = JSON.parse(instance_opts[item]);\n        }\n      } catch(e) {\n        console.error(`FileUploader: the “${item}” parameter is not a valid json`); // eslint-disable-line\n        console.log(instance_opts.element); // eslint-disable-line\n        console.error( e );// eslint-disable-line\n      }\n    });\n\n    // parsing of all boolean or null parameters\n    for(let i in instance_opts) {\n\n      if(typeof instance_opts[i] === 'string' &&\n        ['true', 'false', 'null'].indexOf(instance_opts[i].toLowerCase()) !== -1\n      ) {\n        instance_opts[i] = JSON.parse(instance_opts[i]);\n      }\n    }\n\n    // aspect ratio is ignored if exact constrains are presents\n    if(instance_opts.img_aspect_ratio && instance_opts.img_w && instance_opts.img_h) {\n      console.error('FileUploader: the aspect ratio parameter will be ignored, because exact constraints have been set for width and height'); // eslint-disable-line\n      instance_opts.img_aspect_ratio = null;\n    }\n\n    // aspect ratio parsing\n    instance_opts.img_aspect_ratio_parsed = null;\n    if(instance_opts.img_aspect_ratio) {\n\n      try {\n        if(isNaN(instance_opts.img_aspect_ratio)) {\n          let w,h;\n          if(instance_opts.img_aspect_ratio.indexOf('/') !== -1) {\n            [w,h] = instance_opts.img_aspect_ratio.split('/');\n          } else if (instance_opts.img_aspect_ratio.indexOf(':') !== -1) {\n            [w,h] = instance_opts.img_aspect_ratio.split(':');\n          }\n\n          if( w && h ) {\n            instance_opts.img_aspect_ratio_parsed = +w/+h;\n            instance_opts.img_aspect_ratio = `${w}:${h}`; // force colon format\n          } else {\n            instance_opts.img_aspect_ratio_parsed = Number(instance_opts.img_aspect_ratio);\n          }\n\n        } else {\n          instance_opts.img_aspect_ratio_parsed = +instance_opts.img_aspect_ratio;\n        }\n\n        if(instance_opts.img_aspect_ratio_parsed) {\n          instance_opts.img_aspect_ratio_parsed = Math.round((instance_opts.img_aspect_ratio_parsed + Number.EPSILON) * instance_opts.aspect_ratio_accuracy) / instance_opts.aspect_ratio_accuracy;\n        }\n\n        if(isNaN(instance_opts.img_aspect_ratio_parsed) || !instance_opts.img_aspect_ratio_parsed) {\n          throw new Error();\n        }\n      } catch(e) {\n        console.error(`FileUploader: incorrect aspect ratio parameter → ${instance_opts.img_aspect_ratio}`); // eslint-disable-line\n        instance_opts.img_aspect_ratio = null;\n        instance_opts.img_aspect_ratio_parsed = null;\n      }\n    }\n\n    // classes and all needed merging\n    if(instance_opts.fupl_alert_btn_class) {\n      instance_opts.fupl_alert_template = instance_opts.fupl_alert_template\n        .replace('fupl-alert-btn', 'fupl-alert-btn ' + instance_opts.fupl_alert_btn_class);\n    }\n\n    // calling the createUploader function. Global options are completely overwritten\n    // by instance_opts\n    new createUploader({\n      strs: fupl.strs,\n      opts: instance_opts\n    });\n\n  }); // end document.querySelectorAll(fupl.selector).forEach\n\n}\n\n"],"names":["fupl_strings_it","alert_too_much_files","alert_xhr_error","alert_file_format_error","alert_file_size_error","fupl_alert_header","fupl_alert_btn_text","alert_img_exact_width_err","alert_img_min_width_err","alert_img_max_width_err","alert_img_exact_height_err","alert_img_min_height_err","alert_img_max_height_err","alert_img_ratio_err","no_img_text","no_doc_text","remove_btn_text","info_text_std_imgs","info_text_imgs_svg","info_text_imgs_svg_size_info_text","info_text_img_optimize_info","info_text_svg_optimize_info","info_text_img_fixed_size","info_text_img_equal_min_size","info_text_img_equal_max_size","info_text_img_fixed_width","info_text_img_fixed_height","info_text_img_width_range","info_text_img_min_width","info_text_img_max_width","info_text_img_height_range","info_text_img_min_height","info_text_img_max_height","info_text_pdf_file","info_text_svg_file","info_text_max_filesize","info_text_img_aspect_ratio","img_single_select_text","img_single_drag_text","img_multiple_select_text","img_multiple_drag_text","doc_single_select_text","doc_single_drag_text","doc_multiple_select_text","doc_multiple_drag_text","sortable_icon_title_text","default_options","uploader_url","locales","debug","ajax_method","disabled","filetype","accept","multiple","required","disable_submit","template_main","template_empty_img","template_empty_doc","template_remove_btn","template_loading_element","template_alternative_loading_element","template_img_item_single","template_img_item_multiple","template_doc_item_single","template_doc_item_multiple","wrapper_extra_class","fupl_alert_template","fupl_alert_btn_class","element_dragover_class","uploader_legend","uploader_legend_text","uploader_legend_class","input_label_class","show_info_text","show_optimize_info","info_text_wrap_string","info_text_join_string","custom_info_text","help_text","img_w","img_h","img_min_w","img_min_h","img_max_w","img_max_h","img_aspect_ratio","aspect_ratio_accuracy","max_filesize","varname","registered_extra_field_varname","init_callback","upload_start_callback","upload_complete_callback","alternative_loading_func","values","delete_varname","fancybox","fancybox_anchor_markup","fancybox_callback_func","sortable","sortable_varname","sortable_icon","extra_fields","fupl_utilities","mimetypes","auto","img","pdf","svg","concat","isSuitableBrowser","navigator","userAgent","indexOf","appVersion","div","document","createElement","window","set_has_values","fupl","items","opts","instance_result_wrapper","querySelectorAll","length","wrapper","dataset","hasValues","innerHTML","_type","replace","strs","parse_bytes_value","bytes","mega","toLocaleString","maximumFractionDigits","Number","toFixed","Math","round","parse_max_filesize","filesize_value","maxbytes","unit","feedback_size","isNaN","substr","toUpperCase","exec_callback","callback_function","params","cbk_func","split","forEach","item","error","alert","console","dragged_element","uploader_is_disabled","classes","sorting_class","sorting_item_class","over_item_class","resetAll","classList","remove","parentNode","closest","create_item","item_data","preregistered","item_markup","_mode","fupl_item_wrapper","fupl_remove","querySelector","fupl_file_name","name","title","fupl_file_size","size_string","wi","he","size","src","fupl_url","url","href","span","replaceChild","fupl_item","loading","add","insertAdjacentHTML","fupl_item_dom","id","fupl_remove_trigger","addEventListener","prereg_id","rel_id","img_element","fancybox_wrapper","firstChild","insertBefore","appendChild","setAttribute","extra_fields_wrapper","markup","value_key","use_rel_id","sel","value","selected","ev","e","preventDefault","stopPropagation","order_value","fupl_options","this","element","dataTransfer","effectAllowed","setData","getData","dropEffect","previousElementSibling","nextElementSibling","insertAdjacentElement","idx","add_sortable_events","fupl_alert","mes","fupl_opts","alert_container","send_files","filelist","mode","_form","btn","uploadFile","current_item","img_preview","this_item","file","width","height","fupl_progress","fupl_loading_wrapper","xhr_error_message","uploader_options","Promise","resolve","reject","ajax","XMLHttpRequest","open","onload","status","response","JSON","parse","responseText","tmp_file","server_error","groupCollapsed","_vers","log","groupEnd","statusText","onerror","upload","perc_loaded","loaded","total","lengthComputable","Infinity","fileData","FormData","append","send","then","hidden_fields","field_values","file_name","filename","converted","std_char","conversionTable","$","i","charCodeAt","charAt","RegExp","normalize_file_name","type","isBitmapImg","_key","undefined","build_hidden_fields","click","filelist_item","ext","pop","toLowerCase","Date","now","item_parsed_size","reader","FileReader","image","Image","result","error_messages","push","img_aspect_ratio_parsed","EPSILON","map","readAsDataURL","errormessage","createUploader","_input","original_label","accept_attr","accept_params","trim","getAttribute","Set","Error","Boolean","hasAttribute","_class","join","instance_input","instance_label","instance_dd_text","instance_info_text","info_text","img_size_info","str","slice","create_info_text","Array","isArray","eventName","files","set_listeners","parsed_options","Object","keys","sort","reduce","key","stringify","fileUploderOpts","table","assign","local_strs","options","match","selector","css","head","upl_element","all_data_params","fileUploader","instance_opts","w","h"],"mappings":"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"}